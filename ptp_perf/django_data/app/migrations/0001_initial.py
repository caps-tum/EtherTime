# Generated by Django 5.0.2 on 2024-04-02 17:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PTPEndpoint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('machine_id', models.CharField(max_length=255)),
                ('restart_count', models.IntegerField(default=0)),
                ('endpoint_type', models.CharField(choices=[('UNKNOWN', 'Unknown'), ('MASTER', 'Master'), ('PRIMARY_SLAVE', 'Primary Slave'), ('SECONDARY_SLAVE', 'Secondary Slave'), ('ORCHESTRATOR', 'Orchestrator')], default='UNKNOWN', max_length=32)),
                ('clock_diff_median', models.FloatField(null=True)),
                ('clock_diff_p99', models.FloatField(null=True)),
                ('path_delay_median', models.FloatField(null=True)),
                ('convergence_timestamp', models.DateTimeField(null=True)),
                ('convergence_duration', models.DurationField(null=True)),
                ('convergence_max_offset', models.FloatField(null=True)),
                ('convergence_rate', models.FloatField(null=True)),
                ('clock_step_timestamp', models.DateTimeField(null=True)),
                ('clock_step_magnitude', models.FloatField(null=True)),
            ],
            options={
                'db_table': 'ptp_perf_ptpendpoint',
            },
        ),
        migrations.CreateModel(
            name='PTPProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('benchmark_id', models.CharField(max_length=255)),
                ('vendor_id', models.CharField(max_length=255)),
                ('is_running', models.BooleanField(default=False)),
                ('is_successful', models.BooleanField(default=False)),
                ('is_processed', models.BooleanField(default=False)),
                ('is_corrupted', models.BooleanField(default=False)),
                ('start_time', models.DateTimeField()),
                ('stop_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'ptp_perf_ptpprofile',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('benchmark', 'Benchmark'), ('machine', 'Machine')], max_length=255)),
            ],
            options={
                'db_table': 'ptp_perf_tag',
            },
        ),
        migrations.CreateModel(
            name='LogRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('source', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ptpendpoint')),
            ],
            options={
                'db_table': 'ptp_perf_logrecord',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='ptpendpoint',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ptpprofile'),
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('sample_type', models.CharField(choices=[('CLOCK_DIFF', 'Clock Diff'), ('PATH_DELAY', 'Path Delay'), ('FAULT', 'Fault')], max_length=255)),
                ('value', models.BigIntegerField()),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ptpendpoint')),
            ],
            options={
                'db_table': 'ptp_perf_sample',
            },
        ),
    ]
